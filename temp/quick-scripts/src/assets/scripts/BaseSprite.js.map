{"version":3,"sources":["assets/scripts/BaseSprite.js"],"names":["cc","Class","Component","properties","basePosY","onLoad","isBase","node","zIndex","parseInt","_animation","getComponent","Animation","_name","startWith","setZIndex","val","setTotalLife","totalLife","setLife","life","bloodNode","blood","setBloodBar","setBloodLevel","bar","getChildByName","barTotalWidth","width","setBlood","active","remove","frameStartEvt","console","log","frameEndEvt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,EAAC;AAhBD,GAHP;AAsBL;AAEAC,EAAAA,MAxBK,oBAwBK;AACN;AACA,QAAG,KAAKC,MAAL,EAAH,EAAkB;AACd,WAAKC,IAAL,CAAUC,MAAV,GAAmB,OAAKC,QAAQ,CAAC,KAAG,KAAKL,QAAR,GAAiB,CAAlB,CAAhC;AACH;;AACD,SAAKM,UAAL,GAAkB,KAAKC,YAAL,CAAkBX,EAAE,CAACY,SAArB,CAAlB;AACH,GA9BI;AAgCL;AAEAN,EAAAA,MAAM,EAAE,kBAAW;AACf,QAAG,KAAKC,IAAL,CAAUM,KAAV,CAAgBC,SAAhB,CAA0B,MAA1B,CAAH,EAAsC;AAClC,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAvCI;AAyCLC,EAAAA,SAAS,EAAE,mBAASC,GAAT,EAAc;AACrB,SAAKT,IAAL,CAAUC,MAAV,GAAmBQ,GAAnB;AACH,GA3CI;AA6CLC,EAAAA,YAAY,EAAE,sBAASD,GAAT,EAAc;AACxB,SAAKE,SAAL,GAAiBF,GAAjB;AACH,GA/CI;AAiDLG,EAAAA,OAAO,EAAE,iBAASH,GAAT,EAAc;AACnB,SAAKI,IAAL,GAAYJ,GAAZ;AACA,QAAIK,SAAS,GAAG,KAAKC,KAAL,CAAWX,YAAX,CAAwB,UAAxB,CAAhB;AACAU,IAAAA,SAAS,CAACE,WAAV,CAAsB,KAAKH,IAA3B,EAAiC,KAAKF,SAAtC;AACH,GArDI;AAuDLM,EAAAA,aAAa,EAAE,uBAASR,GAAT,EAAc,CAE5B,CAzDI;AA2DLO,EAAAA,WAAW,EAAE,qBAASH,IAAT,EAAe;AACxB,QAAIK,GAAG,GAAG,KAAKH,KAAL,CAAWI,cAAX,CAA0B,KAA1B,CAAV;AACA,QAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWM,KAA/B;AACAH,IAAAA,GAAG,CAACG,KAAJ,GAAYR,IAAI,GAAC,KAAKF,SAAV,GAAsBS,aAAlC;AACH,GA/DI;AAiELE,EAAAA,QAAQ,EAAE,kBAASP,KAAT,EAAgB;AACtB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKA,KAAL,CAAWQ,MAAX,GAAoB,IAApB;AACH,GApEI;AAsELC,EAAAA,MAAM,EAAE,kBAAW,CAClB,CAvEI;AAyELC,EAAAA,aAAa,EAAE,yBAAW;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,GA5EI;AA8ELC,EAAAA,WAAW,EAAE,uBAAW;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAhFI,CAiFL;;AAjFK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        basePosY:28,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // base postion is fixed by this.basePosY.\n        if(this.isBase()) {\n            this.node.zIndex = 1000+parseInt(32-this.basePosY-2);\n        }\n        this._animation = this.getComponent(cc.Animation);        \n    },\n\n    // start () {},\n\n    isBase: function() {\n        if(this.node._name.startWith(\"base\")) {\n            return true;\n        }\n        return false;\n    },\n\n    setZIndex: function(val) {\n        this.node.zIndex = val;\n    },\n\n    setTotalLife: function(val) {\n        this.totalLife = val;\n    },\n\n    setLife: function(val) {\n        this.life = val;\n        var bloodNode = this.blood.getComponent(\"BloodBar\");\n        bloodNode.setBloodBar(this.life, this.totalLife);\n    },\n\n    setBloodLevel: function(val) {\n        \n    },\n\n    setBloodBar: function(life) {\n        var bar = this.blood.getChildByName(\"bar\");\n        var barTotalWidth = this.blood.width;\n        bar.width = life/this.totalLife * barTotalWidth;\n    },\n\n    setBlood: function(blood) {\n        this.blood = blood;\n        this.blood.active = true;\n    },\n\n    remove: function() {\n    },\n\n    frameStartEvt: function() {\n        console.log(\"first.\");\n\n    },\n\n    frameEndEvt: function() {\n        console.log(\"last.\");\n    },\n    // update (dt) {},\n});\n"]}