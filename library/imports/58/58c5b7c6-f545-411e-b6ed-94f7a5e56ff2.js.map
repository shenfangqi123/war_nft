{"version":3,"sources":["assets/scripts/ArcSprite.js"],"names":["mySprite","require","common","cc","Class","properties","role","start","_animation","getComponent","Animation","WrapMode","Loop","layoutOp","node","parent","remove","play","shadow","destroy","blood","dieStart","console","log","dieEnd","footStart","footEnd","footPrint","zIndex","scaleX","scaleY","beforeKill","afterKill","frame1Evt","dispShadow","frame2Evt","frame3Evt","frame4Evt","frame5Evt","frame6Evt","frame7Evt","aFrame1Evt","playSnd","aFrame2Evt","aFrame3Evt","aFrame4Evt","aFrame5Evt","playAni","agent","agentFuture","isMainPlayer","playAngleAnimationRemote","isEnemyBase","baseId","isEnemyFort","isAgentHero","mainPlayer","playBaseWarriorAnimationDefault","actType","actName","lastAct","randomTime","Math","ceil","random","playFortWarriorAnimationDefault","playBaseWarriorAnimation","fx","fy","targetYOffset","attackTargetYOffset","ex","ey","angle","x","mypos","y","startPos","targetPos","startEPos","targetEPos","vt","vtE","then","angleInfo","offsetDir","enemypos","v2","sub","ag","PI","atan","getActnameByAngle","stop","lastScaleX"],"mappings":"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","sourceRoot":"/","sourcesContent":["var mySprite = require(\"MySprite\");\nvar common = require(\"Common\");\n\ncc.Class({\n    extends: mySprite,\n\n    properties: {\n        role:\"lr\",\n    },\n\n    start () {\n        this._animation = this.getComponent(cc.Animation);\n        this._animation.WrapMode = cc.WrapMode.Loop;\n        if(this.layoutOp == null) {  //if archer stand up on the base.\n            this.layoutOp = this.node.parent.parent.getComponent(\"Game\");\n        }\n    },\n\n    remove: function() {\n        this._animation.play(\"dieoff2\");\n        this.shadow.destroy();\n        this.blood.destroy();\n    },\n\n    dieStart: function() {\n        console.log(\"die start\");\n    },\n\n    dieEnd: function() {\n        console.log(\"die end\");\n        this._animation.play(\"footprint\");\n    },\n\n    //ske clip ske_bomb, foot print start evt\n    footStart: function() {\n        console.log(\"foot start\");\n    },\n\n    footEnd: function() {\n        console.log(\"foot end\");\n        this.node.destroy();\n    },\n\n    //ske clip ske_bomb, foot print start evt\n    footPrint: function() {\n        this.node.zIndex = -1;\n        this.node.scaleX = 1;\n        this.node.scaleY = 1;\n    },\n\n    //ske clip ske_bomb, called by first frame of ske_bomb\n    beforeKill: function() {\n        //this.shadow.destroy();\n    },\n\n    //ske clip ske_bomb, called by last frame of ske_bomb\n    afterKill: function() {\n        console.log(\"--remove archer node--\");\n        this.node.destroy();\n    },\n\n    frame1Evt: function() {\n        this.dispShadow(1);\n    },\n\n    frame2Evt: function() {\n        this.dispShadow(2);\n    },\n\n    frame3Evt: function() {\n        this.dispShadow(3);\n    },\n\n    frame4Evt: function() {\n        this.dispShadow(4);\n    },\n\n    frame5Evt: function() {\n        this.dispShadow(5);\n    },\n\n    frame6Evt: function() {\n        this.dispShadow(6);\n    },\n\n    frame7Evt: function() {\n        this.dispShadow(7);\n    },\n\n\n    aFrame1Evt: function() {\n        this.layoutOp.playSnd(\"lr\");\n    },\n\n    aFrame2Evt: function() {\n    },\n\n    aFrame3Evt: function() {\n    },\n\n    aFrame4Evt: function() {\n    },\n\n    aFrame5Evt: function() {\n    },\n\n    playAni: function(agent, agentFuture, isMainPlayer) {\n        this.playAngleAnimationRemote(agent, agentFuture, isMainPlayer);\n    },\n\n    isEnemyBase: function(baseId) {\n        if(baseId == 1 || baseId == 2 || baseId == 3) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    isEnemyFort: function(isAgentHero, mainPlayer) {\n        if(isAgentHero && mainPlayer == 2) {\n            return true;\n        } \n        if(!isAgentHero && mainPlayer == 1) {\n            return true;\n        } \n        return false;\n    },\n\n    playBaseWarriorAnimationDefault: function(actType, baseId) {\n        var actName;\n\n        if(this.isEnemyBase(baseId)) {\n            actName = \"lr_s_walk\";\n        } else {\n            actName = \"lr_n_walk\";\n        }\n\n        if(actType == \"move\" && this.lastAct == actName) {\n            return;\n        }\n\n        var randomTime = Math.ceil(Math.random()*125)/100;\n        this._animation.play(actName, randomTime);\n        this.lastAct = actName;\n    },\n\n    playFortWarriorAnimationDefault: function(actType, isAgentHero, mainPlayer) {\n        var actName;\n\n        if(this.isEnemyFort(isAgentHero, mainPlayer)) {\n            actName = \"lr_s_walk\";\n        } else {\n            actName = \"lr_n_walk\";\n        }\n\n        if(actType == \"move\" && this.lastAct == actName) {\n            return;\n        }\n\n        var randomTime = Math.ceil(Math.random()*125)/100;\n        this._animation.play(actName, randomTime);\n        this.lastAct = actName;\n    },\n\n    playBaseWarriorAnimation: function(agent, isMainPlayer, actType) {\n        var fx,fy;\n        var targetYOffset = common.attackTargetYOffset;\n        var ex, ey;\n        var angle;\n        var x = agent.mypos.x; \n        var y = agent.mypos.y; \n\n        var startPos,targetPos,startEPos, targetEPos, vt, vtE;\n\n        var randomTime = Math.ceil(Math.random()*125)/100;\n        var actName = \"\";\n        var then;\n        var angleInfo;\n\n        // user to control the up and down user Y postion offset.\n        var offsetDir = 1;\n\n        if(isMainPlayer == 1) {\n            offsetDir = 1;\n        }\n        else if(isMainPlayer == 2) {\n            offsetDir = -1;\n        }\n\n        ex = agent.enemypos.x; \n        ey = agent.enemypos.y; \n\n        // dir according to enemy position\n        startPos  = cc.v2((x)*30, (y)*30);\n        targetPos = cc.v2((ex)*30, (ey)*30+targetYOffset*offsetDir);\n        vt = startPos.sub(targetPos);\n\n        if(vt.x == 0 && vt.y == 0) {\n            return;\n        }\n\n        //if dir no changed, vt.x or vt.y is 0, atan value should be invaild\n        if(vt.x == 0) {\n            vt.x = 0.1;\n        }\n        if(vt.y == 0) {\n            vt.y = 0.1;\n        }\n\n        //if postion not changed, do nothing, or the math.atan will do error.\n        if(vt.x != 0 && vt.y != 0) {\n            var ag = 180/Math.PI * Math.atan(vt.x/vt.y);\n            angle = ag;\n            if(vt.y >= 0) {\n                //when down to up\n                angle = ag + 180;\n            } \n        } \n\n        if(this._animation) {\n            angleInfo = this.getActnameByAngle(angle, actType);\n            actName = angleInfo.actName;\n\n            //used to mirror a sprite.\n            this.node.scaleX = angleInfo.scaleX;\n\n            //if already in attack mode, just skip the animation\n            if(this.lastAct != actName || actType == \"sa\") {\n                if(actType == \"sa\") {\n                    this._animation.stop();\n                    this._animation.play(actName);\n                } else {\n                    //walking action.\n                    this._animation.play(actName, randomTime);\n                }\n                this.angle = angle;\n                this.lastAct = actName;\n                this.lastScaleX = angleInfo.scaleX;\n            }\n        }\n\n    },\n\n/*\n    shootArrow: function() {\n        this.shootAgent();    \n    },  \n\n    shootAgent:function() {\n        var ex, ey;\n        var x = this.ox;\n        var y = this.oy;\n        var arrow = this.arrow;\n        var enemies = this.killedEnemies;\n        var targetYOffset = common.attackTargetYOffset;\n\n        var startPos = cc.v2(x*30+15, y*30+15);\n\n        //var ex = this.ex*30;\n        //var ey = this.ey*30 + targetYOffset;\n\n        if(this.enemy && this.enemy._name !== \"\" && this.enemy.x && this.enemy.y) {\n            ex = this.enemy.x;\n            ey = this.enemy.y;\n        } else {\n            ex = this.ex * 30;\n            ey = this.ey *30 + targetYOffset;             \n        }\n\n\n        var targetPos = cc.v2(ex, ey);\n        var agentNode, enemy;\n\n        if(targetPos.x == 0 && targetPos.y == 0) return;\n\n        var vt = targetPos.sub(startPos);\n        var ag = 180/Math.PI * Math.atan(vt.x/vt.y);\n\n        arrow.active = true;\n        arrow.setRotation(ag+180);\n        arrow.setPosition(startPos);\n\n        var callback = cc.callFunc(function () {\n            arrow.active = false;\n        });\n\n        arrow.runAction(cc.sequence(cc.moveTo(0.2, targetPos), callback)); \n    },\n\n    shootBase:function(x, y, enemy, arrow) {\n        var x = this.ox;\n        var y = this.oy; \n        var enemy = this.enemy; \n        var arrow = this.arrow;\n\n        var startPos = cc.v2(x*30+15, y*30+15);\n        var ex = enemy.mypos.x;\n        var ey = enemy.mypos.y;\n        var blink = cc.blink(0.05,1);\n\n        var targetPos = cc.v2(ex*30+15, ey*30+15);\n        var agentNode;\n        if(!enemy) {\n            return;\n        }\n\n        if(targetPos.x == 0 && targetPos.y == 0) return;\n\n        var vt = targetPos.sub(startPos);\n        var ag = 180/Math.PI * Math.atan(vt.x/vt.y);\n\n        arrow.active = true;\n        arrow.setRotation(ag+180);\n        arrow.setPosition(startPos);\n\n        var callback = cc.callFunc(function () {\n            enemy.baseObj.runAction(blink);\n            arrow.active = false;\n        });\n\n        arrow.runAction(cc.sequence(cc.moveTo(0.2, targetPos), callback)); \n    },\n*/\n\n});\n"]}