{"version":3,"sources":["assets/scripts/MySprite.js"],"names":["common","require","agentObj","cc","Class","properties","sprAtlas","SpriteAtlas","wrapMode","WrapMode","Loop","routes","lastAct","lastAngle","life","eid","onLoad","layoutOp","node","parent","getComponent","start","ctor","init","posX","posY","now","Date","angle","groupKill","attacking","aniType","undefined","console","log","role","crabBodyNode","getChildByName","_animation","dragonBones","ArmatureDisplay","Animation","setInitPos","px","py","pt","v2","push","updatePos","moveTo","nx","ny","ap","getAnchorPoint","size","getContentSize","x","width","shadowMoveTo","setPosition","shadow","dispShadow","frameNo","shadowNode","frameImg","act","actTmp","split","actDir","actType","scaleX","lastScaleX","active","loader","loadRes","SpriteFrame","err","spriteFrame","_name","Sprite","e","getActnameByAngle","actName","ret","specialActname","specialAct","setId","aid","hide","setShadow","getAgentAngle","oPos","dPos","tanAngle","dx","dy","ox","oy","y","ifFlyAgent","playAngleAnimationNear","agent","agentFuture","isMainPlayer","startPos","mypos","enemyPos","enemypos","zorder","parseInt","randomTime","Math","ceil","random","fx","fy","vt","ag","targetPos","angleInfo","ex","ey","distance","sub","mag","attackDistance","zIndex","getAttackDistance","PI","atan","abs","blood","play","playAngleAnimationRemote","startEPos","targetEPos","vtE","_self","then","rot","aniStop","aniPlay","lastActType","playAnimation","stop"],"mappings":"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","sourceRoot":"/","sourcesContent":["var common = require(\"Common\");\nvar agentObj = require(\"AgentObj\");\n\ncc.Class({\n    extends: agentObj,\n\n    properties: {\n        sprAtlas: cc.SpriteAtlas,\n        wrapMode: cc.WrapMode.Loop,\n        routes:[],\n        lastAct:\"\",\n        lastAngle:-1,\n        life:-1,\n        eid:-1,\n    },\n\n    onLoad () {\n        this.layoutOp = this.node.parent.getComponent(\"Game\");\n    },\n\n    start () {\n    },\n\n    ctor() {\n    },\n\n    init: function() {\n        this.posX = 0;\n        this.posY = 0;\n        this.now = Date.now();\n        this.angle = -999;\n        this.groupKill = false;\n        this.attacking = false;\n\n        //if dragonbones animator node\n        if(this.aniType !== undefined && this.aniType == \"dragon\") {\n            console.log(\"role:\" + this.role);\n\n            var crabBodyNode = this.node.getChildByName(\"crab_body\");\n            this._animation = crabBodyNode.getComponent(dragonBones.ArmatureDisplay);\n            //console.log(\"---------\");\n            //this._animation.playAnimation('ske_n_attack', 0);\n        } else {  //if frame animator node\n            this._animation = this.getComponent(cc.Animation);\n            this._animation.WrapMode = cc.WrapMode.Loop;\n        }\n\n    },\n\n/*    \n    setEnemy: function(enemyObj) {\n        if(enemyObj) {\n            this.eid = enemyObj.name;\n            this.enemy = enemyObj;            \n        } \n        else {\n            this.eid = \"\";\n            this.enemy = null;              \n        }\n    },\n\n    onend: function(event) {\n        var agentNode;\n        if(this.enemy.isValid) {\n            agentNode = this.enemy.getComponent('SkeSprite');\n            agentNode.remove();\n        } \n        //this.shootArrow(this.ox, this.oy, this.ex, this.ey, this.arrow);\n    },\n*/\n\n    setInitPos: function(px, py) {\n        this.posX = px;\n        this.posY = py;\n        var pt = cc.v2(this.posX, this.posY);\n\n        this.routes.push(pt);\n    },\n\n    updatePos: function(px, py) {\n        var moveTo = cc.v2(px, py);\n        var nx,ny;\n        var ap = this.node.getAnchorPoint();\n        var size = this.node.getContentSize();\n        \n        nx = (0.5-ap.x) * size.width + px;\n        //ny = (0.5-ap.y) * size.height + py;\n        ny = py;\n\n        var shadowMoveTo = cc.v2(nx, ny);\n        \n        this.node.setPosition(moveTo);\n\n        if(this.shadow) { \n            this.shadow.setPosition(moveTo);\n        }\n        return;\n    },\n\n/*\n    remove: function() {\n        //this.node.scaleX = 0.3;\n        //this.node.scaleY = 0.3;\n        \n        this._animation.play(\"dieoff2\");\n        this.shadow.destroy();\n\n        //node destory in sprite afterkill func\n        //this.node.destroy();\n    },\n*/\n\n    dispShadow: function(frameNo) {\n        //shadow object may not ready in init() when playing\n        if(!this.shadow) return;\n\n        var shadowNode = this.shadow;\n        var frameImg = \"ske_shadow/e/ske_walk_e\"+frameNo;\n        var act = this.lastAct;\n\n        if(!act) return;\n\n        var actTmp = this.lastAct.split(\"_\");\n\n        var actDir = actTmp[1];\n        var actType = actTmp[2];\n        var scaleX = this.lastScaleX;\n\n        if(actDir == \"en1\" || actDir == \"en2\" || actDir == \"en3\") {\n            frameImg = \"ske_shadow/en/ske_walk_en\"+frameNo;\n        }\n        else if(actDir == \"se1\" || actDir == \"se2\" || actDir == \"se3\") {\n            frameImg = \"ske_shadow/se/ske_walk_se\"+frameNo;\n        }\n        else if(actDir == \"s\") {\n            frameImg = \"ske_shadow/s/ske_walk_s\"+frameNo;\n        }\n        else if(actDir == \"n\") {\n            frameImg = \"ske_shadow/n/ske_walk_n\"+frameNo;\n        }\n        else if(actDir == \"e\") {\n            frameImg = \"ske_shadow/e/ske_walk_e\"+frameNo;\n        }\n\n        this.shadow.active = true;\n        cc.loader.loadRes(frameImg, cc.SpriteFrame, function (err, spriteFrame) {\n            if(shadowNode) {\n                try {\n                    if(shadowNode._name != \"\") {\n                        shadowNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n                    }\n                } catch (e) {\n                    console.log(shadowNode);\n                    console.log(e);\n                }\n            }\n        });\n    },\n\n/*\n    move: function(pt) {\n        if(this.removeFlag) {\n            return;\n        }\n\n        var len = this.routes.length;\n        var moveTo;\n\n        if(len == 0) return;\n        if(len == 1) {\n            moveTo = this.routes[0];\n        } else {\n            moveTo = this.routes.shift();     \n        }\n\n        this.node.setPosition(moveTo);\n        if(this.shadow && this.shadow.isValid) {\n            this.shadow.setPosition(moveTo);     \n        }\n    },\n\n    setAction: function() {\n        var eastAnimFrames = [],\n            str = \"\",\n            frame,\n            animation;\n\n        for (var i = 1; i <= 4; i++) {        \n            str = \"c5u\" + i;\n            frame = this.sprAtlas.getSpriteFrame(str);\n            eastAnimFrames.push(frame);\n        }\n\n        //animation = new cc.Animation(eastAnimFrames);\n\n        var clip = cc.AnimationClip.createWithSpriteFrames(eastAnimFrames,frames.length);\n        clip.name = \"anim_001\";\n        clip.speed = 0.08;\n        clip.sample = 4;\n        clip.wrapMode = this.wrapMode;\n        this._animation.addClip(clip);\n    },\n\n    playAnimation: function (wrapMode = cc.WrapMode.Default, speed = 0.5, sample = 60) {\n        if(this._animation) {\n            var animState = this._animation.getAnimationState(\"anim_001\");\n            animState.clip.wrapMode = wrapMode;\n            animState.clip.speed = speed;\n            animState.clip.sample = sample;\n            animState.repeatCount = Infinity;\n            this._animation.play(\"anim_001\");\n        }\n    },\n\n    setInitAct: function(angle, actType) {\n        var angleInfo = this.getActnameByAngle(angle, actType);\n        this.lastAct = angleInfo.actName;\n    },\n\n    getActnameByAngle_bak: function(angle, actType) {\n        var actName=\"\";\n        var scaleX = 1;\n        var ret = {};\n\n        if(angle>=0 && angle<=11.25*1) {\n            if(actType == \"move\") {\n                actName = \"n_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"n_attack\";\n            }\n        }\n        else if(angle>11.25*1 && angle<=11.25*3) {\n            if(actType == \"move\") {\n                actName = \"en3_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en3_attack\";\n            }\n        }\n        else if(angle>11.25*3 && angle<=11.25*5) {\n            if(actType == \"move\") {\n                actName = \"en2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en2_attack\";\n            }\n        }\n        else if(angle>11.25*5 && angle<=11.25*7) {\n            if(actType == \"move\") {\n                actName = \"en1_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en1_attack\";\n            }\n        }\n        else if(angle>11.25*7 && angle<=11.25*9) {\n            if(actType == \"move\") {\n                actName = \"e_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"e_attack\";\n            }\n        }\n        else if(angle>11.25*9 && angle<=11.25*11) {\n            if(actType == \"move\") {\n                actName = \"se1_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se1_attack\";\n            }\n        }\n        else if(angle>11.25*11 && angle<=11.25*13) {\n            if(actType == \"move\") {\n                actName = \"se2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se2_attack\";\n            }\n        }\n        else if(angle>11.25*13 && angle<=11.25*15) {\n            if(actType == \"move\") {\n                actName = \"se3_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se3_attack\";\n            }\n        }\n        else if(angle>11.25*15 || angle<=180) {\n            if(actType == \"move\") {\n                actName = \"s_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"s_attack\";\n            }\n        }\n\n\n        else if(angle<0 && angle>=11.25*-1) {\n            if(actType == \"move\") {\n                actName = \"n_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"n_attack\";\n            }\n            //scaleX = -1;\n        }\n        else if(angle<11.25*-1 && angle>=11.25*-3) {\n            if(actType == \"move\") {\n                actName = \"en3_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en3_attack\";\n            }\n            //scaleX = -1;\n        }\n        else if(angle<11.25*-3 && angle>=11.25*-5) {\n            if(actType == \"move\") {\n                actName = \"en2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en2_attack\";\n            }\n\n            //scaleX = -1;\n        }\n        else if(angle<11.25*-5 && angle>=11.25*-7) {\n            if(actType == \"move\") {\n                actName = \"en1_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en1_attack\";\n            }\n\n            //scaleX = -1;\n        }\n        else if(angle<11.25*-7 && angle>=11.25*-9) {\n            if(actType == \"move\") {\n                actName = \"e_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"e_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if(angle<11.25*-9 && angle>=11.25*-11) {\n            if(actType == \"move\") {\n                actName = \"se1_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se1_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if(angle<11.25*-11 && angle>=11.25*-13) {\n            if(actType == \"move\") {\n                actName = \"se2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se2_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if(angle<11.25*-13 && angle>=11.25*-15) {\n            if(actType == \"move\") {\n                actName = \"se3_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se3_attack\";\n            }\n\n            scaleX = -1;\n        } \n        else if(angle<11.25*-15 && angle>-180) {\n            if(actType == \"move\") {\n                actName = \"s_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"s_attack\";\n            }\n\n            scaleX = -1;\n        }\n\n        else {\n            console.log(\"------:\"+angle);\n        }\n\n        actName = this.role +\"_\"+ actName;\n\n        ret.actName = actName;\n        ret.scaleX = scaleX;\n        return ret;\n    },\n*/\n\n    getActnameByAngle: function(angle, actType) {\n\n\nconsole.log(angle +\"::::\"+ actType);\n\nangle = -90;\n\n        var actName=\"\";\n        var scaleX = 1;\n        var ret = {};\n        var specialActname = false;\n\n        if(angle>22.5*-1 && angle<=22.5*1) {\n            if(actType == \"move\") {\n                actName = \"n_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"n_attack\";\n            }\n        }\n        else if(angle>22.5*1 && angle<=22.5*3) {\n            if(actType == \"move\") {\n                actName = \"en2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en2_attack\";\n            }\n        }\n        else if(angle>22.5*3 && angle<=22.5*5) {\n            if(actType == \"move\") {\n                actName = \"e_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"e_attack\";\n            }\n        }\n        else if(angle>22.5*5 && angle<=22.5*7) {\n            if(actType == \"move\") {\n                actName = \"se2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"se2_attack\";\n            }\n        }\n        else if(angle>22.5*7 || angle<-22.5*9) {\n            if(actType == \"move\") {\n                actName = \"s_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"s_attack\";\n            }\n        }\n\n        else if(angle<22.5*-1 && angle>=22.5*-3) {\n            if(actType == \"move\") {\n                actName = \"en2_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"en2_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if(angle<22.5*-3 && angle>=22.5*-5) {\n            if(actType == \"move\") {\n                actName = \"e_walk\";\n            }\n            else if(actType == \"sa\") {\n                actName = \"e_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if(angle<22.5*-5 && angle>=22.5*-7) {\n            if(actType == \"move\") {\n                actName = \"se2_walk\";\n            }\n            else if(actType == \"sa\") {  // start attack\n                actName = \"se2_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else if (angle<22.5*-7){\n            if(actType == \"move\") {\n                actName = \"s_walk\";\n            }\n            else if(actType == \"sa\") {   // start attack\n                actName = \"s_attack\";\n            }\n\n            scaleX = -1;\n        }\n        else {\n            console.log(\"----error angle--------------:\"+angle);\n        }\n\n\n\nif(this.aniType !== undefined && this.aniType == \"dragon\") {\n        actName = \"ske\" +\"_\"+ actName;\n} else {\n        actName = this.role +\"_\"+ actName;\n}\n\n\n//actName = this.role +\"_\"+ actName;\n\n\n \n        specialActname = this.specialAct(actType);\n        if(specialActname) {\n            actName = specialActname;\n        }\n\n        ret.actName = actName;\n        ret.scaleX = scaleX;\n        return ret;\n    },\n\n    specialAct: function(actType) {\n        // if just 1 vs 1 attack\n        if(!this.groupKill) {\n            return false;\n        }\n        if(actType == \"sa\" && this.role == \"hr\") {\n            return \"hr_all_kill\";\n        }\n        return false;\n    },\n\n    setId: function(aid) {\n        this.aid = aid;\n\n        //var event = new cc.Event.EventCustom(\"event_effect\", true);\n        //event.detail = \"123\";\n        //this.node.dispatchEvent(event);\n    },\n\n    hide: function() {\n        this.node.active = false;\n    },\n\n    setShadow: function(shadow) {\n        this.shadow = shadow;\n        this.shadow.active = true;\n    },\n\n    getAgentAngle: function(oPos, dPos, tanAngle) {\n        var dx,dy,ox,oy;\n        var angle;\n\n        dx = dPos.x;\n        dy = dPos.y;\n        ox = oPos.x;\n        oy = oPos.y;\n\n        if(dx-ox>0 && dy-oy>0) {\n            angle = tanAngle;\n        }\n        else if(dx-ox>0 && dy-oy<0) {\n            angle = 180-tanAngle;\n        }\n        else if(dx-ox<0 && dy-oy<0) {\n            angle = 180+tanAngle;\n        }\n        else if(dx-ox<0 && dy-oy>0) {\n            angle = 0-tanAngle;\n        }\n        else if(dx-ox==0 && dy-oy>0) {\n            angle = 0;\n        }\n        else if(dx-ox==0 && dy-oy<0) {\n            angle = 180;\n        }\n        else if(dy-oy==0 && dx-ox>0) {\n            angle = 90;\n        }\n        else if(dy-oy==0 && dx-ox<0) {\n            angle = -90;\n        } else {\n            console.log(\"wrong angle in Func MySprite->getAgentAngle()\");\n        }\n\n        return angle;\n    },\n\n    ifFlyAgent: function(role) {\n        if(role == \"bee\") {\n            return true;\n        }\n        return false;\n    },\n\n    playAngleAnimationNear: function(agent, agentFuture, isMainPlayer) {\n        if(this.attacking) {\n            return;\n        }\n\n        var startPos = cc.v2(agent.mypos.x, agent.mypos.y);\n        var enemyPos = cc.v2(agent.enemypos.x, agent.enemypos.y);\n        var zorder = 1000+parseInt(32-agent.mypos.y);\n        var randomTime = Math.ceil(Math.random()*125)/100;\n        var actName = \"\";\n        var actType = agent.actType;\n        var fx,fy,vt,ag=0,targetPos,angleInfo;\n\n        var x = agent.mypos.x;\n        var y = agent.mypos.y;\n        var ex = agent.enemypos.x;\n        var ey = agent.enemypos.y;\n\n        var distance = startPos.sub(enemyPos).mag();\n        var attackDistance;\n\n        // fly agent should hover over any other agent.\n        if(!this.ifFlyAgent(agent.role)) {\n            this.node.zIndex = zorder;\n        }\n        this.node.scaleX = 1;\n        \n        if(this._animation) {\n            attackDistance = this.getAttackDistance(agent);\n\n            //1.5 is the distance ajustment variable, should be ajust according to each agent size.\n            //attackDistance = (agent.size + agent.esize)*0.5*1.5;\n\n            if(distance<=attackDistance) {\n                // dir according to enemy position\n                startPos  = cc.v2(x, y);\n                targetPos = cc.v2(ex, ey);\n                vt = targetPos.sub(startPos);\n\n                //if dir no changed, vt.x or vt.y is 0, atan value should be invaild\n                if(vt.x == 0) {\n                    vt.x = 0.1;\n                }\n                if(vt.y == 0) {\n                    vt.y = 0.1;\n                }\n\n                if(vt.x != 0 && vt.y != 0) {\n                    ag = 180/Math.PI * Math.atan(Math.abs(vt.x/vt.y));\n                } \n                ag = this.getAgentAngle(agent.mypos, {\"x\":ex, \"y\":ey}, ag);\n                if(ag > 180) {\n                    ag = ag - 360;\n                }\n\n                angleInfo = this.getActnameByAngle(ag, \"sa\");\n                actName = angleInfo.actName;\n                //used to mirror a sprite.\n                this.node.scaleX = angleInfo.scaleX;\n\n            } else {\n\n                if(agentFuture) {\n                    fx = agentFuture.enemypos.x; \n                    fy = agentFuture.enemypos.y;\n                } else {\n                    fx = agent.enemypos.x;\n                    fy = agent.enemypos.y;\n                }\n                startPos  = cc.v2(x, y);\n                targetPos = cc.v2(fx, fy);\n                vt = targetPos.sub(startPos);\n\n                //if dir no changed, vt.x or vt.y is 0, atan value should be invaild\n                if(vt.x == 0) {\n                    vt.x = 0.1;\n                }\n                if(vt.y == 0) {\n                    vt.y = 0.1;\n                }\n\n                if(vt.x != 0 && vt.y != 0) {\n                    ag = 180/Math.PI * Math.atan(Math.abs(vt.x/vt.y));\n                }\n\n                ag = this.getAgentAngle(agent.mypos, {\"x\":fx, \"y\":fy}, ag);\n                if(ag > 180) {\n                    ag = ag - 360;\n                }\n\n                angleInfo = this.getActnameByAngle(ag, \"move\");\n                actName = angleInfo.actName;\n\n                //used to mirror a sprite.\n                this.node.scaleX = angleInfo.scaleX;\n            }\n\n            //blood bar may flip when agent flip, should make it back.\n            this.blood.scaleX = this.node.scaleX;\n\n            if(this.lastAct != actName) {\n                if(distance<=attackDistance) {\n                    this._animation.play(actName);\n                    //if(this.playEffect !== undefined) {\n                    //    this.playEffect();\n                    //}\n                } else if(!this.attacking) {\n                    this._animation.play(actName, randomTime);\n                }\n                this.lastAct = actName;\n                this.lastScaleX = angleInfo.scaleX;\n            }\n        }\n    },\n\n    playAngleAnimationRemote: function(agent, agentFuture, isMainPlayer) {\n        var fx,fy,actType;\n        var ag = 0;\n        var x = agent.mypos.x; \n        var y = agent.mypos.y; \n        var ex = agent.enemypos.x; \n        var ey = agent.enemypos.y; \n\n        var startPos,targetPos,startEPos, targetEPos, vt, vtE;\n        var _self = this;\n        var zorder = 1000+parseInt(32-y);\n\n        //total animator duration is 1.25s, so take a random time from 0-1.25 to prevent same action\n        var randomTime = Math.ceil(Math.random()*125)/100;\n        var actName = \"\";\n        var then;\n        var angleInfo;\n\n        actType = agent.actType;\n        if(actType == \"ia\" || actType == \"ea\" ) { \n            return;\n        }\n\n        ag = agent.rot;\n        this.node.zIndex = zorder;\n//this.node.scaleX = 1;\n\n        if(actType == \"sa\") {  //start attack\n            // dir according to enemy position\n            startPos  = cc.v2((x)*30, (y)*30);\n            targetPos = cc.v2((ex)*30, (ey)*30);\n            vt = targetPos.sub(startPos);\n\n            //if dir no changed, vt.x or vt.y is 0, atan value should be invaild\n            if(vt.x == 0) {\n                vt.x = 0.1;\n            }\n            if(vt.y == 0) {\n                vt.y = 0.1;\n            }\n\n            if(vt.x != 0 && vt.y != 0) {\n                //ag = 180/Math.PI * Math.atan(Math.abs(vt.y/vt.x));\n                ag = 180/Math.PI * Math.atan(Math.abs(vt.x/vt.y));\n                ag = this.getAgentAngle(agent.mypos, {\"x\":ex, \"y\":ey}, ag);\n                if(ag > 180) {\n                    ag = ag - 360;\n                }\n            } \n        } \n\n        if(actType == \"move\") {\n            if(agentFuture) {\n                fx = agentFuture.enemypos.x; \n                fy = agentFuture.enemypos.y;\n                //future acttype maybe ia instead of move or sa, in this case should not be handled.\n                if(agentFuture && agentFuture.actType != \"ia\") {\n                    actType = agentFuture.actType;\n                } \n            } else {\n                fx = agent.enemypos.x;\n                fy = agent.enemypos.y;\n                if(agentFuture && agentFuture.actType != \"ia\") {\n                    actType = agentFuture.actType;\n                }\n            }\n            startPos  = cc.v2((x)*30, (y)*30);\n            targetPos = cc.v2((fx)*30, (fy)*30);\n            vt = targetPos.sub(startPos);\n\n            //if dir no changed, vt.x or vt.y is 0, atan value should be invaild\n            if(vt.x == 0) {\n                vt.x = 0.1;\n            }\n            if(vt.y == 0) {\n                vt.y = 0.1;\n            }\n\n            if(vt.x != 0 && vt.y != 0) {\n                ag = 180/Math.PI * Math.atan(Math.abs(vt.x/vt.y));\n                ag = this.getAgentAngle(agent.mypos, {\"x\":fx, \"y\":fy}, ag);\n                if(ag > 180) {\n                    ag = ag - 360;\n                }\n            } \n        }\n\n        if(this._animation) {\n            angleInfo = this.getActnameByAngle(ag, actType);\n            actName = angleInfo.actName;\n\nconsole.log(actName);\n\n\n            //used to mirror a sprite.\n//this.node.scaleX = angleInfo.scaleX;\n\n            //blood bar may flip when agent flip, should make it back.\n            this.blood.scaleX = this.node.scaleX;\n\n            //if already in attack mode, just skip the animation\n            if(this.lastAct != actName || actType == \"sa\") {\n                if(actType == \"sa\") {\n                    this.aniStop();\n                    this.aniPlay(actName);\n//this._animation.stop();\n//this._animation.play(actName);\n                } else {\n                    //walking action.\n                    this.aniPlay(actName, randomTime);\n//this._animation.play(actName, randomTime);\n                }\n                this.lastAct = actName;\n//this.lastScaleX = angleInfo.scaleX;\n            }\n        }\n\n/*\n        if(this._animation) {\n            angleInfo = this.getActnameByAngle(angle, actType);\n            actName = angleInfo.actName;\n            this.node.scaleX = angleInfo.scaleX;\n\n            //if already in attack mode, just skip the animation\n            if(this.lastAct != actName) {\n                then = Date.now();\n                // to avoid changing dir frequently. agent would looks tremble otherwise.\n                if(then - this.now > 100) {\n                    this._animation.play(actName, randomTime);\n                    this.angle = angle;\n                    this.now = then;\n                }\n            }\n\n            //if(this.lastAct != actName && actType==\"sa\") {\n            //    var _self = this;\n            //    var animState = this._animation.getAnimationState(actName);\n            //    if (animState) {\n            //        animState.on('lastframe', (event) => {}, this);\n            //    }\n            //}\n\n            this.lastAct = actName;\n\n            this.lastScaleX = angleInfo.scaleX;\n        }\n*/\n\n        this.lastActType = actType;\n    },\n\n    aniPlay: function(actName, randomTime=null) {\n        if(this.aniType !== undefined && this.aniType == \"dragon\") {\n            this._animation.playAnimation(actName, 0);\n        } else {\n            if(randomTime) {\n                this._animation.play(actName, randomTime);\n            } else {\n                this._animation.play(actName);                \n            }\n        }\n    },\n\n    aniStop: function() {\n        if(this.aniType !== undefined && this.aniType == \"dragon\") {\n            //should do stop dragon ani here.\n        } else {\n            this._animation.stop();\n        }\n    }\n\n    // update (dt) {},\n});\n"]}